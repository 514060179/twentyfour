<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinghai.twentyfour.backstage.dao.ManagerUserMapper" >
  <resultMap id="BaseResultMap" type="com.yinghai.twentyfour.backstage.model.ManagerUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="email_verified" property="emailVerified" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_updated" property="lastUpdated" jdbcType="TIMESTAMP" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, email, email_verified, create_time, last_updated, role_id, 
    remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from manager_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from manager_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yinghai.twentyfour.backstage.model.ManagerUser" >
    insert into manager_user (id, username, password, 
      email, email_verified, create_time, 
      last_updated, role_id, remark
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{emailVerified,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastUpdated,jdbcType=TIMESTAMP}, #{roleId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yinghai.twentyfour.backstage.model.ManagerUser" >
    insert into manager_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="emailVerified != null" >
        email_verified,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastUpdated != null" >
        last_updated,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailVerified != null" >
        #{emailVerified,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdated != null" >
        #{lastUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinghai.twentyfour.backstage.model.ManagerUser" >
    update manager_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailVerified != null" >
        email_verified = #{emailVerified,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdated != null" >
        last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinghai.twentyfour.backstage.model.ManagerUser" >
    update manager_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      email_verified = #{emailVerified,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
      role_id = #{roleId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findByCondition" resultMap="BaseResultMap" parameterType="com.yinghai.twentyfour.backstage.model.ManagerUser" >
    select
    <include refid="Base_Column_List" />
    from manager_user where 1=1
    <if test="username != null" >
      and username like #{username,jdbcType=VARCHAR}
    </if>
    <if test="password != null" >
      and password = #{password,jdbcType=VARCHAR}
    </if>
    <if test="email != null" >
      and email like #{email,jdbcType=VARCHAR}
    </if>
    <if test="emailVerified != null" >
      and email_verified = #{emailVerified,jdbcType=TINYINT}
    </if>
    <if test="createTime != null" >
      and create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="lastUpdated != null" >
      and last_updated = #{lastUpdated,jdbcType=TIMESTAMP}
    </if>
    <if test="roleId != null" >
      and role_id = #{roleId,jdbcType=INTEGER}
    </if>
    <if test="remark != null" >
      and remark = #{remark,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>