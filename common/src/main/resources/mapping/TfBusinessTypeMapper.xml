<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yinghai.twentyfour.common.dao.TfBusinessTypeMapper" >
  <resultMap id="BaseResultMap" type="com.yinghai.twentyfour.common.model.TfBusinessType" >
    <id column="business_type_id" property="businessTypeId" jdbcType="INTEGER" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
    <result column="type_description" property="typeDescription" jdbcType="LONGVARCHAR" />
    <result column="type_create_time" property="typeCreateTime" jdbcType="TIMESTAMP" />
    <result column="type_update_time" property="typeUpdateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    business_type_id, type_name, type_description, type_create_time, type_update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tf_business_type
    where business_type_id = #{businessTypeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tf_business_type
    where business_type_id = #{businessTypeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yinghai.twentyfour.common.model.TfBusinessType" >
    insert into tf_business_type (business_type_id, type_name, type_description, 
      type_create_time, type_update_time)
    values (#{businessTypeId,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, #{typeDescription,jdbcType=LONGVARCHAR},
      #{typeCreateTime,jdbcType=TIMESTAMP}, #{typeUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yinghai.twentyfour.common.model.TfBusinessType" >
    insert into tf_business_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="businessTypeId != null" >
        business_type_id,
      </if>
      <if test="typeName != null" >
        type_name,
      </if>
      <if test="typeDescription != null" >
        type_description,
      </if>
      <if test="typeCreateTime != null" >
        type_create_time,
      </if>
      <if test="typeUpdateTime != null" >
        type_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="businessTypeId != null" >
        #{businessTypeId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null" >
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeDescription != null" >
        #{typeDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="typeCreateTime != null" >
        #{typeCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeUpdateTime != null" >
        #{typeUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yinghai.twentyfour.common.model.TfBusinessType" >
    update tf_business_type
    <set >
      <if test="typeName != null" >
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="typeDescription != null" >
        type_description = #{typeDescription,jdbcType=LONGVARCHAR},
      </if>
      <if test="typeCreateTime != null" >
        type_create_time = #{typeCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeUpdateTime != null" >
        type_update_time = #{typeUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where business_type_id = #{businessTypeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yinghai.twentyfour.common.model.TfBusinessType" >
    update tf_business_type
    set type_name = #{typeName,jdbcType=VARCHAR},
      type_description = #{typeDescription,jdbcType=LONGVARCHAR},
      type_create_time = #{typeCreateTime,jdbcType=TIMESTAMP},
      type_update_time = #{typeUpdateTime,jdbcType=TIMESTAMP}
    where business_type_id = #{businessTypeId,jdbcType=INTEGER}
  </update>
  <select id="findByPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tf_business_type
  </select>

  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tf_business_type
  </select>
</mapper>